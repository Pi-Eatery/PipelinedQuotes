name: Python and Docker CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Run Linting Job
    steps:
    
      - name: Checkout Repository
        uses: actions/checkout@v4
          
      - name: Setting Up Python
        uses: actions/setup-python@v5
        
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint With ruff
        run: |
          ruff check .
          ruff format --check .
          
  build:
    runs-on: ubuntu-latest
    name: Build Dockerfile
    steps: 
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build and Export Tar Ball 
        uses: docker/build-push-action@v6
        with:
          tags: quotes-api
          outputs: type=tar,dest=${{runner.temp}}/quotes-api.tar

      - name: Build and Export Docker Image
        uses: docker/build-push-action@v6
        with:
          tags: quotes-api
          outputs: type=image,dest=${{runner.temp}}/quotes-api

      - name: Start the container
        run: |
          docker run -d --rm quotes-api

      - name: Smoke-Check
        uses: stringbean/docker-healthcheck-action@v1
        with:
          container: quotes-api
          wait-time: 30
          require-healthy: true

      - name: Upload Image
        uses: actions/upload-artifact@v4
        with:
          name: quotes-api
          path: ${{runner.temp}}/quotes-api.tar
          
  scan:
    runs-on: ubuntu-latest
    name: Docker vuln check
    needs: build
    steps:
      - name: Download Image
        uses: actions/download-artifact@v4
        with:
          name: quotes-api
          path: . 
    
      - name: Load Image
        run: |
          docker load --input ./quotes-api

      - name: Aqua Security Trivy
  # You may pin to the exact commit or the version.
  # uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8
        uses: aquasecurity/trivy-action@0.33.1
        with:
          # Scan type to use for scanning vulnerability
          scan-type: # optional, default is image
          # image reference (for backward compatibility)
          image-ref: quotes-api.tar
          # reference of tar file to scan
          input: # optional, default is 
          # Scan reference
          scan-ref: # optional, default is .
          # exit code when vulnerabilities were found
          exit-code: # optional
          # ignore unfixed vulnerabilities
          ignore-unfixed: # optional, default is false
          # comma-separated list of vulnerability types (os,library)
          vuln-type: # optional, default is os,library
          # severities of vulnerabilities to be displayed
          severity: # optional, default is UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
          # output format (table, json, template)
          format: # optional, default is table
          # use an existing template for rendering output (@/contrib/gitlab.tpl, @/contrib/junit.tpl, @/contrib/html.tpl)
          template: # optional, default is 
          # writes results to a file with the specified file name
          output: # optional, default is 
          # comma separated list of directories where traversal is skipped
          skip-dirs: # optional, default is 
          # comma separated list of files to be skipped
          skip-files: # optional, default is 
          # specify where the cache is stored
          cache-dir: # optional, default is ${{ github.workspace }}/.cache/trivy
          # timeout (default 5m0s)
          timeout: # optional, default is 
          # filter vulnerabilities with OPA rego language
          ignore-policy: # optional, default is 
          # suppress progress bar and log output
          hide-progress: # optional
          # output all packages regardless of vulnerability
          list-all-pkgs: # optional, default is false
          # comma-separated list of what security issues to detect
          scanners: # optional, default is 
          # comma-separated list of relative paths in repository to one or more .trivyignore files
          trivyignores: # optional, default is 
          # GitHub Personal Access Token (PAT) for submitting SBOM to GitHub Dependency Snapshot API
          github-pat: # optional
          # path to trivy.yaml config
          trivy-config: # optional
          # path to terraform tfvars file
          tf-vars: # optional
          # limit severities for SARIF format
          limit-severities-for-sarif: # optional
          # unix domain socket path to use for docker scanning, ex. unix:///var/run/docker.sock
          docker-host: # optional
          # Trivy version to use
          version: # optional, default is v0.65.0
          # Used to specify whether caching is needed. Set to false, if you would like to disable caching.
          cache: # optional, default is true
          # skip calling the setup-trivy action to install trivy
          skip-setup-trivy: # optional, default is false
          # `token-setup-trivy` is required when `github.token` in invalid for `https://github.com` server. See https://github.com/aquasecurity/setup-trivy/?tab=readme-ov-file#install-trivy-with-non-default-token for more details. `token-setup-trivy` is only used to fetch the Trivy repository in `setup-trivy`

          token-setup-trivy: # optional, default is ${{ github.token }}
                




